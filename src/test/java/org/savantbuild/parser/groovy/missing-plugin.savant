/*
 * Copyright (c) 2014, Inversoft Inc., All Rights Reserved
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific
 * language governing permissions and limitations under the License.
 */
package org.savantbuild.parser.groovy

project(group: "group", name: "name", version: "1.1.0", licenses: ["Commercial"]) {
  workflow {
    fetch {
      cache()
      url(url: "http://repository.savantbuild.org", username: "${global.savantTestRepositoryUsername}", password: "${global.savantTestRepositoryPassword}")
    }
    publish {
      cache()
    }
  }

  publishWorkflow {
    subversion(repository: "http://svn.example.com", username: "${global.savantTestSVNUsername}", password: "${global.savantTestSVNPassword}")
  }

  dependencies {
    group(name: "compile") {
      dependency(id: "org.example:compile:1.0.0")
    }
    group(name: "test-compile", export: false) {
      dependency(id: "org.example:test:1.0")
      dependency(id: "org.example:test2:2.0", optional: true)
    }
  }

  publications {
    main {
      publication(name: "publication1", type: "jar", file: "build/jars/${project.name}-${project.version}.jar", source: "build/jars/${project.name}-${project.version}-src.jar")
    }
    test {
      publication(name: "publication2", type: "jar", file: "build/jars/${project.name}-test-${project.version}.jar", source: "build/jars/${project.name}-test-${project.version}-src.jar")
    }
  }
}

target(name: "compile", description: "This target compiles everything") {
  if (!switches.has("skip")) {
    project.name = "changed"
  }

  missingDependency.go()
}

target(name: "test", description: "This runs the tests", dependsOn: ["compile"]) {
}