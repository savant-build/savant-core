/*
 * Copyright (c) 2014-2024, Inversoft Inc., All Rights Reserved
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific
 * language governing permissions and limitations under the License.
 */
savantVersion = "2.0.0"
project(group: "org.savantbuild", name: "savant-core", version: "2.0.1", licenses: ["Apache-2.0"]) {
  workflow {
    fetch {
      cache()
      url(url: "https://repository.savantbuild.org")
    }
    publish {
      cache()
    }
  }

  publishWorkflow {
    subversion(repository: "https://svn.savantbuild.org")
  }

  dependencies {
    group(name: "compile") {
      dependency(id: "org.apache.groovy:groovy:4.0.22:jar")
      dependency(id: "org.apache.groovy:groovy-datetime:4.0.22:jar")
      dependency(id: "org.apache.groovy:groovy-groovydoc:4.0.22:jar")
      dependency(id: "org.apache.groovy:groovy-jmx:4.0.22:jar")
      dependency(id: "org.apache.groovy:groovy-json:4.0.22:jar")
      dependency(id: "org.apache.groovy:groovy-jsr223:4.0.22:jar")
      dependency(id: "org.apache.groovy:groovy-macro:4.0.22:jar")
      dependency(id: "org.apache.groovy:groovy-nio:4.0.22:jar")
      dependency(id: "org.apache.groovy:groovy-sql:4.0.22:jar")
      dependency(id: "org.apache.groovy:groovy-templates:4.0.22:jar")
      dependency(id: "org.apache.groovy:groovy-xml:4.0.22:jar")
      dependency(id: "org.apache.groovy:groovy-yaml:4.0.22:jar")
      dependency(id: "org.savantbuild:savant-dependency-management:2.0.1")
      dependency(id: "org.savantbuild:savant-utils:2.0.1")
      dependency(id: "org.savantbuild:savant-version:${savantVersion}")
    }
    group(name: "test-compile", export: false) {
      dependency(id: "org.easymock:easymock:3.2")
      dependency(id: "org.testng:testng:6.8.7")
    }
  }

  publications {
    standard()
    main {
      publication(name: "savant", type: "tar.gz", file: "build/distributions/savant-${project.version}.tar.gz")
    }
  }
}

// Plugins
dependency = loadPlugin(id: "org.savantbuild.plugin:dependency:2.0.0")
file = loadPlugin(id: "org.savantbuild.plugin:file:2.0.0")
java = loadPlugin(id: "org.savantbuild.plugin:java:2.0.0")
javaTestNG = loadPlugin(id: "org.savantbuild.plugin:java-testng:2.0.0")
idea = loadPlugin(id: "org.savantbuild.plugin:idea:2.0.0")
release = loadPlugin(id: "org.savantbuild.plugin:release-git:2.0.0")

// Plugin settings
java.settings.javaVersion = "17"
javaTestNG.settings.javaVersion = "17"
idea.settings.moduleMap = [
    "org.savantbuild:savant-dependency-management:${savantVersion}": "savant-dependency-management",
    "org.savantbuild:savant-utils:${savantVersion}"                : "savant-utils",
    "org.savantbuild:savant-version:${savantVersion}"              : "savant-version"
]

target(name: "clean", description: "Cleans the project") {
  java.clean()
}

target(name: "compile", description: "Compiles the project") {
  java.compile()
}

target(name: "jar", description: "JARs the project", dependsOn: ["compile"]) {
  java.jar()
}

target(name: "doc", description: "Generate the project's JavaDoc", dependsOn: ["compile"]) {
  java.document()
}

target(name: "test", description: "Runs the project's tests", dependsOn: ["jar"]) {
  javaTestNG.test()
}

target(name: "bundle", description: "Generates the Tarball bundle", dependsOn: ["jar"]) {
  file.copy(to: "build/distributions/exploded/bin") {
    fileSet(dir: "src/main/scripts")
  }

  file.copy(to: "build/distributions/exploded/lib") {
    fileSet(dir: "build/jars", includePatterns: [~/savant-core-${project.version}\.jar/])
  }

  dependency.copy(to: "build/distributions/exploded/lib") {
    dependencies(group: "compile", transitive: true, transitiveGroups: ["provided", "compile", "runtime"])
    dependencies(group: "runtime", transitive: true, transitiveGroups: ["provided", "compile", "runtime"])
  }

  file.tar(file: "build/distributions/savant-${project.version}.tar.gz", compress: true) {
    tarFileSet(prefix: "savant-${project.version}", dir: "build/distributions/exploded")
  }

  file.zip(file: "build/distributions/savant-${project.version}.zip") {
    zipFileSet(prefix: "savant-${project.version}", dir: "build/distributions/exploded")
  }
}

target(name: "int", description: "Releases a local integration build of the project", dependsOn: ["test", "bundle"]) {
  dependency.integrate()
}

target(name: "release", description: "Releases a full version of the project", dependsOn: ["clean", "test", "bundle"]) {
  release.release()
}

target(name: "idea", description: "Updates the IntelliJ IDEA module file") {
  idea.iml()
}
